function varargout = elliptic_trammel_export(varargin)
% ELLIPTIC_TRAMMEL_EXPORT M-file for elliptic_trammel_export.fig
%      ELLIPTIC_TRAMMEL_EXPORT, by itself, creates a new ELLIPTIC_TRAMMEL_EXPORT or raises the existing
%      singleton*.
%
%      H = ELLIPTIC_TRAMMEL_EXPORT returns the handle to a new ELLIPTIC_TRAMMEL_EXPORT or the handle to
%      the existing singleton*.
%
%      ELLIPTIC_TRAMMEL_EXPORT('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in ELLIPTIC_TRAMMEL_EXPORT.M with the given input arguments.
%
%      ELLIPTIC_TRAMMEL_EXPORT('Property','Value',...) creates a new ELLIPTIC_TRAMMEL_EXPORT or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before elliptic_trammel_export_OpeningFunction gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to elliptic_trammel_export_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help elliptic_trammel_export

% Last Modified by GUIDE v2.5 23-Sep-2002 22:49:37

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @elliptic_trammel_export_OpeningFcn, ...
                   'gui_OutputFcn',  @elliptic_trammel_export_OutputFcn, ...
                   'gui_LayoutFcn',  @elliptic_trammel_export_LayoutFcn, ...
                   'gui_Callback',   []);
if nargin & isstr(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before elliptic_trammel_export is made visible.
function elliptic_trammel_export_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to elliptic_trammel_export (see VARARGIN)

% Choose default command line output for elliptic_trammel_export
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes elliptic_trammel_export wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = elliptic_trammel_export_OutputFcn(hObject, eventdata, handles)
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --- Executes during object creation, after setting all properties.
function edit_a_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit_a (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc
    set(hObject,'BackgroundColor','white');
else
    set(hObject,'BackgroundColor',get(0,'defaultUicontrolBackgroundColor'));
end



function edit_a_Callback(hObject, eventdata, handles)
% hObject    handle to edit_a (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit_a as text
%        str2double(get(hObject,'String')) returns contents of edit_a as a double


% --- Executes during object creation, after setting all properties.


% --- Executes on button press in pushbutton_plot.
function pushbutton_plot_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton_plot (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
a= str2double(get(handles.edit_a, 'String'));
b= str2double(get(handles.edit_b, 'String'));

%==================================================================
% elliptic_trammel_export.m
% ----------------------------------------------------------------------------
% ----------------------------------------------------------------------------
%This program is used to simulate the elliptic trammel, based on Eq. (3-4) on p. 66,
%in Kinematics and Dynamics of Machines, 2nd ed. by Martin, G.H., McGraw-Hill, 1982. 
% ----------------------------------------------------------------------------
p = zeros(2,3);                 %p is the points of the bar
m = []; mm = []; 
%-----------------------------------------------------------------------------
for theta = pi/4:pi/30:9*pi/4;  %theta is initial angle of bar
p(1,1) = 0;      
p(2,1) = -(a-b)*sin(theta);   %p(1,i) is the point sliding on the y coordinate
p(1,2) = (a-b)*cos(theta);
p(2,2) = 0;                     %p(2,i) is the point sliding on the x coordinate
p(1,3) = a*cos(theta);
p(2,3) = b*sin(theta);        %p(3,i) is the point to form the elliptic          
m = [m, p(:,3)];                %append
k=max(a,b)*1.1;
x=[-k,k;0,0];                   %the slot
axes(handles.axes_plot)
plot (x(1,:),x(2,:),'k', x(2,:),x(1,:),'k',  p(1,1:2),p(2,1:2),'-bs',  p(1,:),p(2,:),'-bo', m(1,:),m(2,:),'r');
text(k,0,'x','HorizontalAlignment','left','VerticalAlignment','middle')
text(0,k,'y','HorizontalAlignment','center','VerticalAlignment','bottom')
%plot the horizational and vertical slot, the bar with the sliding block and the profile of the elliptic 
%annotate the equation
axis ([-k k -k k]);             %Sets display range
axis equal;
axis off;   
axes(handles.axes_equation)
text(1,2,'{x}^2','HorizontalAlignment','center','VerticalAlignment','bottom')
text(1,2,'----','HorizontalAlignment','center','VerticalAlignment','middle')
text(1,2,'{a}^2','HorizontalAlignment','center','VerticalAlignment','top')
text(1.25,2,'+','HorizontalAlignment','center','VerticalAlignment','middle')
text(1.5,2,'{y}^2','HorizontalAlignment','center','VerticalAlignment','bottom')
text(1.5,2,'----','HorizontalAlignment','center','VerticalAlignment','middle')
text(1.5,2,'{b}^2','HorizontalAlignment','center','VerticalAlignment','top')
text(1.75,2,'=','HorizontalAlignment','center','VerticalAlignment','middle')
text(2,2,'1','HorizontalAlignment','center','VerticalAlignment','middle')
axis ([1.5 2.5 1.5 2.5]);             %Sets display range
axis equal;
axis off;                       %Turns off all axis lines, tick marks, and labels                       
drawnow;                        %Complete pending drawing events and updates the Figure window

end




% --- Executes on button press in pushbutton_quit.
function pushbutton_quit_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton_quit (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

close(gcf);



% --- Executes during object creation, after setting all properties.
function edit_b_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit_b (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc
    set(hObject,'BackgroundColor','white');
else
    set(hObject,'BackgroundColor',get(0,'defaultUicontrolBackgroundColor'));
end



function edit_b_Callback(hObject, eventdata, handles)
% hObject    handle to edit_b (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit_b as text
%        str2double(get(hObject,'String')) returns contents of edit_b as a double







% --- Creates and returns a handle to the GUI figure. 
function h1 = elliptic_trammel_export_LayoutFcn(policy)
% policy - create a new figure or use a singleton. 'new' or 'reuse'.

persistent hsingleton;
if strcmpi(policy, 'reuse') & ishandle(hsingleton)
    h1 = hsingleton;
    return;
end

h1 = figure(...
'Units','characters',...
'Color',[0.831372549019608 0.815686274509804 0.784313725490196],...
'Colormap',[0 0 0.5625;0 0 0.625;0 0 0.6875;0 0 0.75;0 0 0.8125;0 0 0.875;0 0 0.9375;0 0 1;0 0.0625 1;0 0.125 1;0 0.1875 1;0 0.25 1;0 0.3125 1;0 0.375 1;0 0.4375 1;0 0.5 1;0 0.5625 1;0 0.625 1;0 0.6875 1;0 0.75 1;0 0.8125 1;0 0.875 1;0 0.9375 1;0 1 1;0.0625 1 1;0.125 1 0.9375;0.1875 1 0.875;0.25 1 0.8125;0.3125 1 0.75;0.375 1 0.6875;0.4375 1 0.625;0.5 1 0.5625;0.5625 1 0.5;0.625 1 0.4375;0.6875 1 0.375;0.75 1 0.3125;0.8125 1 0.25;0.875 1 0.1875;0.9375 1 0.125;1 1 0.0625;1 1 0;1 0.9375 0;1 0.875 0;1 0.8125 0;1 0.75 0;1 0.6875 0;1 0.625 0;1 0.5625 0;1 0.5 0;1 0.4375 0;1 0.375 0;1 0.3125 0;1 0.25 0;1 0.1875 0;1 0.125 0;1 0.0625 0;1 0 0;0.9375 0 0;0.875 0 0;0.8125 0 0;0.75 0 0;0.6875 0 0;0.625 0 0;0.5625 0 0],...
'IntegerHandle','off',...
'InvertHardcopy',get(0,'defaultfigureInvertHardcopy'),...
'MenuBar','none',...
'Name','elliptic_trammel',...
'NumberTitle','off',...
'PaperPosition',get(0,'defaultfigurePaperPosition'),...
'Position',[80 10 112 32.3076923076923],...
'Renderer',get(0,'defaultfigureRenderer'),...
'RendererMode','manual',...
'Resize','off',...
'HandleVisibility','callback',...
'Tag','figure1',...
'UserData',zeros(1,0));

setappdata(h1, 'GUIDEOptions', struct(...
'active_h', 1.680006e+002, ...
'taginfo', struct(...
'figure', 2, ...
'text', 24, ...
'axes', 3, ...
'edit', 16, ...
'pushbutton', 7, ...
'frame', 6, ...
'togglebutton', 2), ...
'override', 0, ...
'release', 13, ...
'resize', 'none', ...
'accessibility', 'callback', ...
'mfile', 1, ...
'callbacks', 1, ...
'singleton', 1, ...
'syscolorfig', 1, ...
'lastSavedFile', 'C:\summer_02\erin\matlab_r13\kinmeatics\norton\elliptic_trammel.m'));


h2 = axes(...
'Parent',h1,...
'Units','characters',...
'ALim',get(0,'defaultaxesALim'),...
'ALimMode','manual',...
'CameraPosition',[0.5 0.5 9.16025403784439],...
'CameraPositionMode','manual',...
'CameraTarget',[0.5 0.5 0.5],...
'CameraTargetMode','manual',...
'CameraUpVector',[0 1 0],...
'CameraUpVectorMode','manual',...
'CameraViewAngle',6.60861036031192,...
'CameraViewAngleMode','manual',...
'CLim',get(0,'defaultaxesCLim'),...
'CLimMode','manual',...
'Color',get(0,'defaultaxesColor'),...
'ColorOrder',get(0,'defaultaxesColorOrder'),...
'DataAspectRatio',get(0,'defaultaxesDataAspectRatio'),...
'DataAspectRatioMode','manual',...
'PlotBoxAspectRatio',get(0,'defaultaxesPlotBoxAspectRatio'),...
'PlotBoxAspectRatioMode','manual',...
'Position',[14.6 0.230769230769231 87.8 24.1538461538462],...
'TickDir',get(0,'defaultaxesTickDir'),...
'TickDirMode','manual',...
'XColor',get(0,'defaultaxesXColor'),...
'XLim',get(0,'defaultaxesXLim'),...
'XLimMode','manual',...
'XTick',[0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1],...
'XTickLabel',{ '0  ' '0.1' '0.2' '0.3' '0.4' '0.5' '0.6' '0.7' '0.8' '0.9' '1  ' },...
'XTickLabelMode','manual',...
'XTickMode','manual',...
'YColor',get(0,'defaultaxesYColor'),...
'YLim',get(0,'defaultaxesYLim'),...
'YLimMode','manual',...
'YTick',[0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1],...
'YTickLabel',{ '0  ' '0.1' '0.2' '0.3' '0.4' '0.5' '0.6' '0.7' '0.8' '0.9' '1  ' },...
'YTickLabelMode','manual',...
'YTickMode','manual',...
'ZColor',get(0,'defaultaxesZColor'),...
'ZLim',get(0,'defaultaxesZLim'),...
'ZLimMode','manual',...
'ZTick',[0 0.5 1],...
'ZTickLabel','',...
'ZTickLabelMode','manual',...
'ZTickMode','manual',...
'Tag','axes_plot',...
'UserData',zeros(1,0));


h3 = get(h2,'title');

set(h3,...
'Parent',h2,...
'Color',[0 0 0],...
'HorizontalAlignment','center',...
'Position',[0.496815286624204 1.02070063694268 1.00005459937205],...
'VerticalAlignment','bottom',...
'HandleVisibility','off');

h4 = get(h2,'xlabel');

set(h4,...
'Parent',h2,...
'Color',[0 0 0],...
'HorizontalAlignment','center',...
'Position',[0.496815286624204 -0.0748407643312101 1.00005459937205],...
'VerticalAlignment','cap',...
'HandleVisibility','off');

h5 = get(h2,'ylabel');

set(h5,...
'Parent',h2,...
'Color',[0 0 0],...
'HorizontalAlignment','center',...
'Position',[-0.0923566878980892 0.495222929936306 1.00005459937205],...
'Rotation',90,...
'VerticalAlignment','bottom',...
'HandleVisibility','off');

h6 = get(h2,'zlabel');

set(h6,...
'Parent',h2,...
'Color',[0 0 0],...
'HorizontalAlignment','right',...
'Position',[-0.43312101910828 1.32324840764331 1.00005459937205],...
'HandleVisibility','off',...
'Visible','off');

h7 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'ListboxTop',0,...
'Position',[22.4 26 41 5.76923076923077],...
'String',{ '' },...
'Style','frame',...
'Tag','frame5');


h8 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontWeight','bold',...
'ListboxTop',0,...
'Position',[9.8 0.0769230769230769 90.2 1.38461538461538],...
'String','Software copyright  2004 by The McGraw-Hill Companies, Inc.',...
'Style','text',...
'Tag','text1');


h9 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'Callback','elliptic_trammel_export(''pushbutton_plot_Callback'',gcbo,[],guidata(gcbo))',...
'ListboxTop',0,...
'Position',[2.8 28.3076923076923 10.8 2.53846153846154],...
'String','Plot',...
'Tag','pushbutton_plot');


h10 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'Callback','elliptic_trammel_export(''pushbutton_quit_Callback'',gcbo,[],guidata(gcbo))',...
'ListboxTop',0,...
'Position',[100.8 28.3076923076923 10.2 2.38461538461538],...
'String','Quit',...
'Tag','pushbutton_quit');


h11 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback','elliptic_trammel_export(''edit_a_Callback'',gcbo,[],guidata(gcbo))',...
'CData',zeros(1,0),...
'FontSize',7,...
'ListboxTop',0,...
'Position',[26.8 26.3846153846154 4.4 1.61538461538462],...
'String','5',...
'Style','edit',...
'CreateFcn','elliptic_trammel_export(''edit_a_CreateFcn'',gcbo,[],guidata(gcbo))',...
'Tag','edit_a',...
'UserData',zeros(1,0));


h12 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'CData',zeros(1,0),...
'FontWeight','bold',...
'ListboxTop',0,...
'Position',[27 28 4 1.15384615384615],...
'String','a',...
'Style','text',...
'Tag','text2',...
'UserData',zeros(1,0));


h13 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback','elliptic_trammel_export(''edit_b_Callback'',gcbo,[],guidata(gcbo))',...
'CData',zeros(1,0),...
'FontSize',7,...
'ListboxTop',0,...
'Position',[47 26.2307692307692 4.4 1.61538461538462],...
'String','2',...
'Style','edit',...
'CreateFcn','elliptic_trammel_export(''edit_b_CreateFcn'',gcbo,[],guidata(gcbo))',...
'Tag','edit_b',...
'UserData',zeros(1,0));


h14 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'CData',zeros(1,0),...
'FontWeight','bold',...
'ListboxTop',0,...
'Position',[47.2 27.8461538461538 4 1.15384615384615],...
'String','b',...
'Style','text',...
'Tag','text5',...
'UserData',zeros(1,0));


h15 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'CData',zeros(1,0),...
'ListboxTop',0,...
'Position',[23.8 28.9230769230769 11 1.15384615384615],...
'String','Total',...
'Style','text',...
'Tag','text10',...
'UserData',zeros(1,0));


h16 = axes(...
'Parent',h1,...
'Units','characters',...
'CameraPosition',[0.5 0.5 9.16025403784439],...
'CameraPositionMode',get(0,'defaultaxesCameraPositionMode'),...
'Color',get(0,'defaultaxesColor'),...
'ColorOrder',get(0,'defaultaxesColorOrder'),...
'Position',[65.8 26.9230769230769 18 4.30769230769231],...
'XColor',get(0,'defaultaxesXColor'),...
'YColor',get(0,'defaultaxesYColor'),...
'ZColor',get(0,'defaultaxesZColor'),...
'Tag','axes_equation');


h17 = get(h16,'title');

set(h17,...
'Parent',h16,...
'Color',[0 0 0],...
'HorizontalAlignment','center',...
'Position',[0.494444444444444 1.11607142857143 1.00005459937205],...
'VerticalAlignment','bottom',...
'HandleVisibility','off');

h18 = get(h16,'xlabel');

set(h18,...
'Parent',h16,...
'Color',[0 0 0],...
'HorizontalAlignment','center',...
'Position',[0.494444444444444 -0.419642857142857 1.00005459937205],...
'VerticalAlignment','cap',...
'HandleVisibility','off');

h19 = get(h16,'ylabel');

set(h19,...
'Parent',h16,...
'Color',[0 0 0],...
'HorizontalAlignment','center',...
'Position',[-0.316666666666667 0.473214285714286 1.00005459937205],...
'Rotation',90,...
'VerticalAlignment','bottom',...
'HandleVisibility','off');

h20 = get(h16,'zlabel');

set(h20,...
'Parent',h16,...
'Color',[0 0 0],...
'HorizontalAlignment','right',...
'Position',[-3.66111111111111 1.22321428571429 1.00005459937205],...
'HandleVisibility','off',...
'Visible','off');

h21 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'CData',zeros(1,0),...
'ListboxTop',0,...
'Position',[33.6 28.8461538461538 28.2 1.23076923076923],...
'String','From horizontal slider to end',...
'Style','text',...
'Tag','text22',...
'UserData',zeros(1,0));


h22 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontSize',10,...
'FontWeight','bold',...
'ListboxTop',0,...
'Position',[34 30.3076923076923 18.2 1.30769230769231],...
'String','Link Length',...
'Style','text',...
'Tag','text23');



hsingleton = h1;


% --- Handles default GUIDE GUI creation and callback dispatch
function varargout = gui_mainfcn(gui_State, varargin)


%   GUI_MAINFCN provides these command line APIs for dealing with GUIs
%
%      ELLIPTIC_TRAMMEL_EXPORT, by itself, creates a new ELLIPTIC_TRAMMEL_EXPORT or raises the existing
%      singleton*.
%
%      H = ELLIPTIC_TRAMMEL_EXPORT returns the handle to a new ELLIPTIC_TRAMMEL_EXPORT or the handle to
%      the existing singleton*.
%
%      ELLIPTIC_TRAMMEL_EXPORT('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in ELLIPTIC_TRAMMEL_EXPORT.M with the given input arguments.
%
%      ELLIPTIC_TRAMMEL_EXPORT('Property','Value',...) creates a new ELLIPTIC_TRAMMEL_EXPORT or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before untitled_OpeningFunction gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to untitled_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".

%   Copyright 1984-2002 The MathWorks, Inc.
%   $Revision: 1.4 $ $Date: 2002/05/31 21:44:31 $

gui_StateFields =  {'gui_Name'
                    'gui_Singleton'
                    'gui_OpeningFcn'
                    'gui_OutputFcn'
                    'gui_LayoutFcn'
                    'gui_Callback'};
gui_Mfile = '';
for i=1:length(gui_StateFields)
    if ~isfield(gui_State, gui_StateFields{i})
        error('Could not find field %s in the gui_State struct in GUI M-file %s', gui_StateFields{i}, gui_Mfile);        
    elseif isequal(gui_StateFields{i}, 'gui_Name')
        gui_Mfile = [getfield(gui_State, gui_StateFields{i}), '.m'];
    end
end

numargin = length(varargin);

if numargin == 0
    % ELLIPTIC_TRAMMEL_EXPORT
    % create the GUI
    gui_Create = 1;
elseif numargin > 3 & ischar(varargin{1}) & ishandle(varargin{2})
    % ELLIPTIC_TRAMMEL_EXPORT('CALLBACK',hObject,eventData,handles,...)
    gui_Create = 0;
else
    % ELLIPTIC_TRAMMEL_EXPORT(...)
    % create the GUI and hand varargin to the openingfcn
    gui_Create = 1;
end

if gui_Create == 0
    varargin{1} = gui_State.gui_Callback;
    if nargout
        [varargout{1:nargout}] = feval(varargin{:});
    else
        feval(varargin{:});
    end
else
    if gui_State.gui_Singleton
        gui_SingletonOpt = 'reuse';
    else
        gui_SingletonOpt = 'new';
    end
    
    % Open fig file with stored settings.  Note: This executes all component
    % specific CreateFunctions with an empty HANDLES structure.
    
    % Do feval on layout code in m-file if it exists
    if ~isempty(gui_State.gui_LayoutFcn)
        gui_hFigure = feval(gui_State.gui_LayoutFcn, gui_SingletonOpt);
    else
        gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt);            
        % If the figure has InGUIInitialization it was not completely created
        % on the last pass.  Delete this handle and try again.
        if isappdata(gui_hFigure, 'InGUIInitialization')
            delete(gui_hFigure);
            gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt);            
        end
    end
    
    % Set flag to indicate starting GUI initialization
    setappdata(gui_hFigure,'InGUIInitialization',1);

    % Fetch GUIDE Application options
    gui_Options = getappdata(gui_hFigure,'GUIDEOptions');
    
    if ~isappdata(gui_hFigure,'GUIOnScreen')
        % Adjust background color
        if gui_Options.syscolorfig 
            set(gui_hFigure,'Color', get(0,'DefaultUicontrolBackgroundColor'));
        end

        % Generate HANDLES structure and store with GUIDATA
        guidata(gui_hFigure, guihandles(gui_hFigure));
    end
    
    % If user specified 'Visible','off' in p/v pairs, don't make the figure
    % visible.
    gui_MakeVisible = 1;
    for ind=1:2:length(varargin)
        if length(varargin) == ind
            break;
        end
        len1 = min(length('visible'),length(varargin{ind}));
        len2 = min(length('off'),length(varargin{ind+1}));
        if ischar(varargin{ind}) & ischar(varargin{ind+1}) & ...
                strncmpi(varargin{ind},'visible',len1) & len2 > 1
            if strncmpi(varargin{ind+1},'off',len2)
                gui_MakeVisible = 0;
            elseif strncmpi(varargin{ind+1},'on',len2)
                gui_MakeVisible = 1;
            end
        end
    end
    
    % Check for figure param value pairs
    for index=1:2:length(varargin)
        if length(varargin) == index
            break;
        end
        try, set(gui_hFigure, varargin{index}, varargin{index+1}), catch, break, end
    end

    % If handle visibility is set to 'callback', turn it on until finished
    % with OpeningFcn
    gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
    if strcmp(gui_HandleVisibility, 'callback')
        set(gui_hFigure,'HandleVisibility', 'on');
    end
    
    feval(gui_State.gui_OpeningFcn, gui_hFigure, [], guidata(gui_hFigure), varargin{:});
    
    if ishandle(gui_hFigure)
        % Update handle visibility
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);
        
        % Make figure visible
        if gui_MakeVisible
            set(gui_hFigure, 'Visible', 'on')
            if gui_Options.singleton 
                setappdata(gui_hFigure,'GUIOnScreen', 1);
            end
        end

        % Done with GUI initialization
        rmappdata(gui_hFigure,'InGUIInitialization');
    end
    
    % If handle visibility is set to 'callback', turn it on until finished with
    % OutputFcn
    if ishandle(gui_hFigure)
        gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
        if strcmp(gui_HandleVisibility, 'callback')
            set(gui_hFigure,'HandleVisibility', 'on');
        end
        gui_Handles = guidata(gui_hFigure);
    else
        gui_Handles = [];
    end
    
    if nargout
        [varargout{1:nargout}] = feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    else
        feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    end
    
    if ishandle(gui_hFigure)
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);
    end
end    

function gui_hFigure = local_openfig(name, singleton)
if nargin('openfig') == 3 
    gui_hFigure = openfig(name, singleton, 'auto');
else
    % OPENFIG did not accept 3rd input argument until R13,
    % toggle default figure visible to prevent the figure
    % from showing up too soon.
    gui_OldDefaultVisible = get(0,'defaultFigureVisible');
    set(0,'defaultFigureVisible','off');
    gui_hFigure = openfig(name, singleton);
    set(0,'defaultFigureVisible',gui_OldDefaultVisible);
end

